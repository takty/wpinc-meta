class Lab{static _func(r){return r>Lab._C1?Math.pow(r,1/3):r/Lab._C2+4/29}static _invFunc(r){return r>Lab._C3?Math.pow(r,3):(r-4/29)*Lab._C2}static fromXYZ([r,e,t]){const n=Lab._func(r/Lab.XYZ_TRISTIMULUS_VALUES[0]),l=Lab._func(e/Lab.XYZ_TRISTIMULUS_VALUES[1]);return[116*l-16,500*(n-l),200*(l-Lab._func(t/Lab.XYZ_TRISTIMULUS_VALUES[2]))]}static lightnessFromXYZ([r,e,t]){return 116*Lab._func(e/Lab.XYZ_TRISTIMULUS_VALUES[1])-16}static toXYZ([r,e,t]){const n=(r+16)/116,l=n+e/500,s=n-t/200;return[Lab._invFunc(l)*Lab.XYZ_TRISTIMULUS_VALUES[0],Lab._invFunc(n)*Lab.XYZ_TRISTIMULUS_VALUES[1],Lab._invFunc(s)*Lab.XYZ_TRISTIMULUS_VALUES[2]]}static conspicuityOf(r){return Evaluation.conspicuityOfLab(r)}static differenceBetween(r,e){return Evaluation.differenceBetweenLab(r,e)}static toPolarCoordinate([r,e,t]){const n=t>0?Math.atan2(t,e):Math.atan2(-t,-e)+Math.PI;return[r,Math.sqrt(e*e+t*t),360*n/(2*Math.PI)]}static toOrthogonalCoordinate([r,e,t]){const n=t*(2*Math.PI)/360;return[r,Math.cos(n)*e,Math.sin(n)*e]}}Lab._C1=Math.pow(6,3)/Math.pow(29,3),Lab._C2=3*Math.pow(6,2)/Math.pow(29,2),Lab._C3=6/29,Lab.D50_xyz=[.34567,.3585,.29583],Lab.D50_XYZ=[Lab.D50_xyz[0]/Lab.D50_xyz[1],1,Lab.D50_xyz[2]/Lab.D50_xyz[1]],Lab.D65_xyz=[.31273,.32902,.35825],Lab.D65_XYZ=[Lab.D65_xyz[0]/Lab.D65_xyz[1],1,Lab.D65_xyz[2]/Lab.D65_xyz[1]],Lab.XYZ_TRISTIMULUS_VALUES=Lab.D65_XYZ;class LMS{static fromXYZ([r,e,t]){return[LMS.matrix[0][0]*r+LMS.matrix[0][1]*e+LMS.matrix[0][2]*t,LMS.matrix[1][0]*r+LMS.matrix[1][1]*e+LMS.matrix[1][2]*t,LMS.matrix[2][0]*r+LMS.matrix[2][1]*e+LMS.matrix[2][2]*t]}static toXYZ([r,e,t]){return[LMS.matrixInverse[0][0]*r+LMS.matrixInverse[0][1]*e+LMS.matrixInverse[0][2]*t,LMS.matrixInverse[1][0]*r+LMS.matrixInverse[1][1]*e+LMS.matrixInverse[1][2]*t,LMS.matrixInverse[2][0]*r+LMS.matrixInverse[2][1]*e+LMS.matrixInverse[2][2]*t]}}LMS.SMITH_POKORNY=[[.15514,.54312,-.03286],[-.15514,.45684,.03286],[0,0,.01608]],LMS.SMITH_POKORNY_INV=[[2.944812906606763,-3.500977991936487,13.17218214714747],[1.000040001600064,1.000040001600064,0],[0,0,62.18905472636816]],LMS.BRADFORD=[[.8951,.2664,-.1614],[-.7502,1.7135,.0367],[.0389,-.0685,1.0296]],LMS.BRADFORD_INV=[[.9869929,-.1470543,.1599627],[.4323053,.5183603,.0492912],[-.0085287,.0400428,.9684867]],LMS.VON_KRIES=[[.40024,.7076,-.08081],[-.2263,1.16532,.0457],[0,0,.91822]],LMS.VON_KRIES_INV=[[1.8599364,-1.1293816,.2198974],[.3611914,.6388125,-64e-7],[0,0,1.0890636]],LMS.matrix=LMS.SMITH_POKORNY,LMS.matrixInverse=LMS.SMITH_POKORNY_INV;class LRGB{static toXYZ([r,e,t]){return[.4124564*r+.3575761*e+.1804375*t,.2126729*r+.7151522*e+.072175*t,.0193339*r+.119192*e+.9503041*t]}static fromXYZ([r,e,t]){return[3.2404542*r+-1.5371385*e+-.4985314*t,-.969266*r+1.8760108*e+.041556*t,.0556434*r+-.2040259*e+1.0572252*t]}static toRGB(r){return RGB.fromLRGB(r)}static fromRGB(r){return RGB.toLRGB(r)}static toYIQ(r){return YIQ.fromLRGB(r)}static fromYIQ(r){return YIQ.toLRGB(r)}}class RGB{static _checkRange(r,e,t){let n=!1;return r[0]>t&&(r[0]=t,n=!0),r[0]<e&&(r[0]=e,n=!0),r[1]>t&&(r[1]=t,n=!0),r[1]<e&&(r[1]=e,n=!0),r[2]>t&&(r[2]=t,n=!0),r[2]<e&&(r[2]=e,n=!0),n}static _func(r){return r<.03928?r/12.92:Math.pow((r+.055)/1.055,2.4)}static _invFunc(r){return r=r>.00304?1.055*Math.pow(r,1/2.4)-.055:12.92*r}static toLRGB([r,e,t]){return[RGB._func(r/255),RGB._func(e/255),RGB._func(t/255)]}static fromLRGB([r,e,t]){const n=[255*RGB._invFunc(r)|0,255*RGB._invFunc(e)|0,255*RGB._invFunc(t)|0];return RGB.isSaturated=RGB._checkRange(n,0,255),n}static fromColorInteger(r){return[r>>16&255,r>>8&255,255&r]}static toColorInteger([r,e,t]){return r<<16|e<<8|t|4278190080}static toLab(r){return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)))}static fromLab(r){return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(r)))}static toXYZ(r){return LRGB.toXYZ(LRGB.fromRGB(r))}static fromXYZ(r){return RGB.fromLRGB(LRGB.fromXYZ(r))}static toYxy(r){return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)))}static fromYxy(r){return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(r)))}static toLightness(r){const e=Lab.lightnessFromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)));return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab([e,0,0])))}}RGB.isSaturated=!1;class XYZ{static toLRGB(r,e,t){return LRGB.fromXYZ(r,e,t)}static fromLRGB(r){return LRGB.toXYZ(r)}static toYxy(r){return Yxy.fromXYZ(r)}static fromYxy(r){return Yxy.toXYZ(r)}static toLab(r){return Lab.fromXYZ(r)}static fromLab(r){return Lab.toXYZ(r)}static toLMS(r){return LMS.fromXYZ(r)}static fromLMS(r){return LMS.toXYZ(r)}static toMunsell(r){return Munsell.fromXYZ(r)}static fromMunsell(r){return Munsell.toXYZ(r)}static fromIlluminantC([r,e,t]){return[.9972812*r+-.0093756*e+-.0154171*t,-.0010298*r+1.0007636*e+2084e-7*t,.9209267*t]}static toIlluminantC([r,e,t]){return[1.0027359*r+.0093941*e+.0167846*t,.0010319*r+.9992466*e+-2089e-7*t,1.0858628*t]}}class YIQ{static fromLRGB([r,e,t]){return[.299*r+.587*e+.114*t,.595716*r+-.274453*e+-.321263*t,.211456*r+-.522591*e+.311135*t]}static toLRGB([r,e,t]){return[r+.9563*e+.621*t,r+-.2721*e+-.6474*t,r+-1.107*e+1.7046*t]}}class Yxy{static fromXYZ([r,e,t]){const n=r+e+t;return 0===n?[e,.31273,.32902]:[e,r/n,e/n]}static toXYZ([r,e,t]){const n=e*r/t;if(Number.isNaN(n))return Yxy.isSaturated=!1,[0,0,0];const l=r,s=(1-e-t)*r/t;return Yxy.isSaturated=Lab.D65_XYZ[0]<n||Lab.D65_XYZ[1]<l||Lab.D65_XYZ[2]<s,[n,l,s]}static categoryOf(r){return Evaluation.categoryOfYxy(r)}}Yxy.isSaturated=!1;class Munsell{static _getXy(r,e,t){return 0===t?Munsell._ILLUMINANT_C:Munsell._TBL[r][e/25][t/2]}static _v2y(r){if(r<=1)return.0121*r;const e=r*r;return(.0467*(e*r)+.5602*e-.1753*r+.8007)/100}static _y2v(r){if(r<=.0121)return r/.0121;let e=10;for(;;){const t=-(100*Munsell._v2y(e)-100*r)/(e*e*.1401+1.1204*e-.1753)+e;if(Math.abs(t-e)<.01)break;e=t}return e}static _eq(r,e){return Math.abs(r-e)<Munsell._EP}static _eq0(r){return Math.abs(r)<Munsell._EP}static _yxy2mun([r,e,t]){const n=Munsell._y2v(r);if(Munsell._eq(n,Munsell._TBL_V[Munsell._TBL_V.length-1])){const r=Munsell._interpolateHC(e,t,Munsell._TBL_V.length-1);return[r[0],n,r[1]]}if(Munsell._eq0(n)||Munsell._TBL_V[Munsell._TBL_V.length-1]<n||Munsell._eq(e,Munsell._ILLUMINANT_C[0])&&Munsell._eq(t,Munsell._ILLUMINANT_C[1]))return[0,n,0];let l=-1;for(;Munsell._TBL_V[l+1]<=n;)++l;let s=[0,0];-1!=l&&(s=Munsell._interpolateHC(e,t,l));const a=l+1,o=Munsell._interpolateHC(e,t,a);-1==l&&(s[0]=o[0],s[1]=0);const u=-1==l?0:Munsell._TBL_V[l],M=(n-u)/(Munsell._TBL_V[a]-u);let c=(o[0]-s[0])*M+s[0];Munsell._MAX_HUE<=c&&(c-=Munsell._MAX_HUE);let _=(o[1]-s[1])*M+s[1];return _<Munsell.MONO_LIMIT_C&&(_=0),[c,n,_]}static _interpolateHC(r,e,t){let n,l=-1,s=-1,a=-1,o=null;r:for(n=0;n<=975;n+=25){l=n+25,1e3==l&&(l=0);e:for(s=0;s<=50;s+=2){a=s+2;const u=Munsell._getXy(t,n,s),M=Munsell._getXy(t,n,a),c=Munsell._getXy(t,l,s),_=Munsell._getXy(t,l,a);if(null==u&&null==c)break e;if(null!=u&&null!=c&&null!=_&&null!=M&&(u[0]==c[0]&&u[1]==c[1]?Munsell._isInside(u,_,M,r,e)&&(o=Munsell._interpolationRatio(r,e,u,M,c,_)):(Munsell._isInside(u,_,M,r,e)||Munsell._isInside(u,c,_,r,e))&&(o=Munsell._interpolationRatio(r,e,u,M,c,_)),null!=o))break r}}return null===o?[0,0]:(0==l&&(l=1e3),[((l-n)*o[0]+n)/10,(a-s)*o[1]+s])}static _isInside(r,e,t,n,l){return!(Munsell._cross(n-r[0],l-r[1],e[0]-r[0],e[1]-r[1])<0)&&(!(Munsell._cross(n-e[0],l-e[1],t[0]-e[0],t[1]-e[1])<0)&&!(Munsell._cross(n-t[0],l-t[1],r[0]-t[0],r[1]-t[1])<0))}static _cross(r,e,t,n){return r*n-e*t}static _interpolationRatio(r,e,t,n,l,s){let a=-1;const o=(t[0]-n[0])*(t[1]+s[1]-l[1]-n[1])-(t[0]+s[0]-l[0]-n[0])*(t[1]-n[1]),u=(r-t[0])*(t[1]+s[1]-l[1]-n[1])+(t[0]-n[0])*(l[1]-t[1])-(t[0]+s[0]-l[0]-n[0])*(e-t[1])-(l[0]-t[0])*(t[1]-n[1]),M=(r-t[0])*(l[1]-t[1])-(e-t[1])*(l[0]-t[0]);if(Munsell._eq0(o))Munsell._eq0(u)||(a=-M/u);else{const r=Math.sqrt(u*u-4*o*M),e=(-u+r)/(2*o),n=(-u-r)/(2*o);t[0]==l[0]&&t[1]==l[1]?0<=n&&n<=1&&(a=n):0<=e&&e<=1?a=e:0<=n&&n<=1&&(a=n)}if(a<0)return null;let c=-1,_=-1,L=-1;const f=(t[0]-n[0]-l[0]+s[0])*a-t[0]+l[0],m=(t[1]-n[1]-l[1]+s[1])*a-t[1]+l[1];return Munsell._eq0(f)||(_=((t[0]-n[0])*a+r-t[0])/f),Munsell._eq0(m)||(L=((t[1]-n[1])*a+e-t[1])/m),0<=_&&_<=1?c=_:0<=L&&L<=1&&(c=L),c<0?null:[c,a]}static hueNameToHueValue(r){if(1==r.length)return-1;const e=(t=r.charAt(r.length-2),Number.isInteger(parseInt(t))?1:2);var t;const n=r.substring(r.length-e);let l=parseFloat(r.substring(0,r.length-e));return l+=10*Munsell._HUE_NAMES.indexOf(n),Munsell._MAX_HUE<=l&&(l-=Munsell._MAX_HUE),l}static hueValueToHueName(r,e){if(-1==r||Munsell._eq0(e))return"N";r<=0&&(r+=Munsell._MAX_HUE);let t=(0|10*r)%100,n=0|r/10;return 0===t&&(t=100,n-=1),Math.round(10*t)/100+Munsell._HUE_NAMES[n]}static fromXYZ(r){return Munsell._yxy2mun(Yxy.fromXYZ(XYZ.toIlluminantC(r)))}static toXYZ([r,e,t]){Munsell._MAX_HUE<=r&&(r-=Munsell._MAX_HUE);const n=[Munsell._v2y(e),0,0];if(Munsell.isSaturated=!1,Munsell._eq0(e)||r<0||t<Munsell.MONO_LIMIT_C)return n[1]=Munsell._ILLUMINANT_C[0],n[2]=Munsell._ILLUMINANT_C[1],Munsell.isSaturated=Munsell._eq0(e)&&0<t,XYZ.fromIlluminantC(Yxy.toXYZ(n));if(Munsell._TBL_V[Munsell._TBL_V.length-1]<=e){const l=Munsell._interpolateXY(r,t,Munsell._TBL_V.length-1);return n[1]=l[0],n[2]=l[1],Munsell.isSaturated=Munsell._TBL_V[Munsell._TBL_V.length-1]<e,XYZ.fromIlluminantC(Yxy.toXYZ(n))}let l=-1;for(;Munsell._TBL_V[l+1]<=e;)++l;const s=l+1;let a=[0,0];-1!=l?(a=Munsell._interpolateXY(r,t,l),a[2]||(Munsell.isSaturated=!0)):(a[0]=Munsell._ILLUMINANT_C[0],a[1]=Munsell._ILLUMINANT_C[1],Munsell.isSaturated=!0);const o=Munsell._interpolateXY(r,t,s);o[2]||(Munsell.isSaturated=!0);const u=-1==l?0:Munsell._TBL_V[l],M=(e-u)/(Munsell._TBL_V[s]-u),c=(o[0]-a[0])*M+a[0],_=(o[1]-a[1])*M+a[1];return n[1]=c,n[2]=_,XYZ.fromIlluminantC(Yxy.toXYZ(n))}static toPCCS(r){return PCCS.fromMunsell(r)}static fromPCCS(r){return PCCS.toMunsell(r)}static _interpolateXY(r,e,t){const n=10*r;let l=0|25*Math.floor(n/25),s=l+25;const a=0|2*Math.floor(e/2),o=a+2,u=(n-l)/(s-l),M=(e-a)/(o-a);1e3==s&&(s=0);const c=Munsell._TBL_MAX_C[t][l/25],_=Munsell._TBL_MAX_C[t][s/25];if(c<=a||_<=a){let r=[0,0],e=[0,0];if(a<c){const e=Munsell._getXy(t,l,a),n=Munsell._getXy(t,l,o);r[0]=(n[0]-e[0])*M+e[0],r[1]=(n[1]-e[1])*M+e[1]}else r=Munsell._getXy(t,l,c);if(a<_){const r=Munsell._getXy(t,s,a),n=Munsell._getXy(t,s,o);e[0]=(n[0]-r[0])*M+r[0],e[1]=(n[1]-r[1])*M+r[1]}else e=Munsell._getXy(t,s,_);return[(e[0]-r[0])*u+r[0],(e[1]-r[1])*u+r[1],!1]}if(0==a){const r=Munsell._ILLUMINANT_C,e=Munsell._getXy(t,l,o),n=Munsell._getXy(t,s,o),a=(n[0]-e[0])*u+e[0],c=(n[1]-e[1])*u+e[1];return[(a-r[0])*M+r[0],(c-r[1])*M+r[1],!0]}{const r=Munsell._getXy(t,l,a),e=Munsell._getXy(t,l,o),n=Munsell._getXy(t,s,a),c=Munsell._getXy(t,s,o),_=(n[0]-r[0])*u+r[0],L=(n[1]-r[1])*u+r[1];return[((c[0]-e[0])*u+e[0]-_)*M+_,((c[1]-e[1])*u+e[1]-L)*M+L,!0]}}static toString([r,e,t]){const n=Math.round(10*e)/10;if(t<Munsell.MONO_LIMIT_C)return`N ${n}`;return`${Munsell.hueValueToHueName(r,t)} ${n}/${Math.round(10*t)/10}`}}Munsell.isSaturated=!1,Munsell.MONO_LIMIT_C=.05;const _TBL_V_REAL=[1,2,3,4,5,6,7,8,9],_TBL_V_ALL=[.2,.4,.6,.8,1,2,3,4,5,6,7,8,9,10];function _initTable(){for(let e=0;e<Munsell._TBL_V.length;e+=1){Munsell._TBL_MAX_C[e]=new Array(40),Munsell._TBL_MAX_C[e].fill(0),Munsell._TBL[e]=new Array(40);for(let r=0,t=40;r<t;r+=1)Munsell._TBL[e][r]=new Array(27);for(const t of Munsell._TBL_SRC_MIN[e]){const n=t.shift();r(t),r(t);for(let r=0;r<t.length;r+=2){const l=r/2+1,s=t[r+0]/1e3,a=t[r+1]/1e3;Munsell._TBL[e][n][l]=[s,a],Munsell._TBL_MAX_C[e][n]<2*l&&(Munsell._TBL_MAX_C[e][n]=2*l)}}}function r(r){let e=0,t=0;for(let n=0;n<r.length;n+=2){const l=r[n],s=r[n+1];r[n]=l+e,r[n+1]=s+t,e+=l,t+=s}}}Munsell._TBL_V=_TBL_V_REAL,Munsell._MIN_HUE=0,Munsell._MAX_HUE=100,Munsell._HUE_NAMES=["R","YR","Y","GY","G","BG","B","PB","P","RP"],Munsell._EP=1e-13,Munsell._ILLUMINANT_C=[.3101,.3162],Munsell._TBL_MAX_C=new Array(Munsell._TBL_V.length),Munsell._TBL=new Array(Munsell._TBL_V.length),Munsell._TBL_SRC_MIN=[[[0,363,271,-334,-300,-6,4,-2,0,-5,4,-1,1],[1,377,282,-337,-307,-5,1,-6,1,-4,3],[2,391,293,-340,-313,-4,-1,-8,-1,-7,2],[3,402,303,-338,-317,-6,-5,-10,-2,-9,1],[4,413,315,-333,-323,-15,-7,-5,-6,-12,0],[5,426,334,-321,-331,-31,-13,-7,-11],[6,438,358,-310,-336],[7,443,378],[8,445,398],[9,436,418],[10,423,427],[11,404,429],[12,380,421],[13,354,409],[14,336,398,-295,-202],[15,315,384,-317,-230],[16,301,372,-330,-254,-20,31],[17,291,363,-337,-277,-28,27,-35,15],[18,283,356,-337,-290,-28,12,-9,-7],[19,276,348,-336,-299,-22,5,1,-11],[20,269,341,-334,-310,-14,-1,5,-16],[21,260,329,-332,-317,1,-8,2,-3],[22,250,314,-325,-326,9,-4],[23,243,302,-316,-327,9,-3],[24,236,288,-306,-326,11,1],[25,232,278,-299,-324,14,5],[26,229,268,-291,-319,16,9],[27,229,258,-286,-311,15,12,9,5],[28,231,249,-284,-301,14,11,8,7],[29,236,242,-282,-293,10,9,9,9],[30,243,237,-285,-287,9,8,10,9,7,8],[31,255,231,-287,-280,9,9,10,12,6,9,3,4,2,4,0,0,1,5,0,-1,1,2,-1,0,1,1,0,0,-1,0,1,1,0,1,0,0,0,0],[32,268,228,-290,-273,5,9,7,12,3,4,2,4,2,4,0,1,1,3,1,1,0,2,-1,-1,1,1,1,0,-1,1],[33,281,230,-295,-273,4,12,3,5,1,7,1,2,2,4,0,2,1,3,1,0,-1,1,1,2,-1,-1],[34,294,233,-303,-273,3,10,1,5,1,5,1,3,1,2,0,4,0,3,1,0,0,0],[35,303,236,-307,-275,1,10,0,4,1,5,-1,3,2,1,-1,5,1,3,0,0],[36,313,240,-313,-277,0,8,-2,3,1,6,0,3,0,1,1,5,-1,2],[37,324,246,-319,-282,-2,7,-1,3,-1,6,0,3,0,1,-1,4],[38,338,254,-326,-288,-3,6,-2,2,0,6,-3,2,0,4],[39,350,262,-329,-294,-5,6,-2,1,-2,4,-1,3]],[[0,353,296,-321,-314,-3,1,0,-2,-4,1,-2,0,-1,1],[1,361,303,-320,-316,-4,-1,2,-3,-5,1,-2,-2,-3,1],[2,369,311,-320,-319,-3,-2,4,-3,-8,-4,-5,1,0,-2],[3,375,318,-316,-319,-5,-4,1,-4,-3,-7,-8,-1,-4,-1],[4,381,327,-314,-321,-6,-6,1,-7,-8,-7,-6,-4,-4,-3],[5,385,337,-310,-323,-7,-7,4,-6],[6,388,348,-309,-322,-3,-7],[7,389,359,-309,-322,-1,-6],[8,387,369,-306,-321],[9,383,379,-303,-319],[10,376,384,-298,-311],[11,366,386,-292,-300],[12,356,385,-293,-291],[13,342,380,-296,-285],[14,331,374,-304,-283,-1,19],[15,317,365,-309,-284,-7,11,-11,21],[16,307,358,-315,-292,-6,7,-8,14,-10,10,-8,2],[17,298,351,-320,-302,-5,3,-3,0,-12,14,-4,-5,-3,-6,0,-5],[18,292,345,-320,-305,-4,-2,-2,-3,-8,5,-2,-2,1,-5,2,-3],[19,287,340,-320,-309,-1,-4,-2,-1,-4,1,-2,-2,3,-4,4,-3],[20,282,334,-320,-312,3,-4,-3,-1,-1,-2,0,-3,6,-3,2,-3],[21,277,327,-320,-316,6,-4,-4,0,4,-4,3,0,5,-2],[22,270,318,-317,-321,8,-1,-4,-3,7,-1,8,0],[23,265,310,-314,-322,8,-1,-1,-1,8,1,7,3],[24,261,301,-312,-323,8,0,2,-2,8,4],[25,258,294,-310,-323,8,0,5,1,7,3],[26,256,287,-307,-322,8,-1,6,3,9,6],[27,255,280,-304,-320,9,3,5,3,9,7],[28,256,273,-302,-315,8,5,6,3,8,9],[29,259,268,-300,-311,6,4,6,6,8,8,5,5],[30,264,262,-302,-305,6,5,7,6,6,7,5,6,3,1],[31,271,258,-300,-301,6,7,5,7,5,5,6,7,2,4,2,1,0,2,2,3,-1,-1,1,3,0,0,1,1,-1,0,1,0,-1,1,1,0,-1,0],[32,280,257,-300,-298,4,9,1,3,6,7,3,6,1,2,1,2,1,2,1,1,0,1,0,2,1,0,0,1,0,0,0,1,0,0],[33,289,258,-302,-295,3,8,1,1,2,6,2,5,1,2,0,3,2,1,-1,2,1,1,0,0,0,2,1,-1,-1,1],[34,298,261,-305,-296,1,8,0,-1,2,7,0,3,1,2,0,5,1,0,0,1,1,1,-1,1,1,0,0,2],[35,307,265,-309,-298,0,7,-1,-2,1,7,0,3,0,3,0,2,1,2,0,1,0,0,0,2],[36,316,269,-313,-299,-1,4,-1,-1,0,7,-1,2,1,2,-1,2,-1,2,1,2,0,0],[37,328,275,-318,-300,-1,1,0,-2,-3,6,-1,2,-1,1,0,3,-1,2,-1,1],[38,338,283,-320,-306,-3,1,0,-2,-4,4,0,2,-1,2,-1,1,-2,4],[39,346,289,-322,-310,-2,2,0,-2,-4,1,-2,2,-2,2,-2,2]],[[0,353,307,-317,-317,-3,-1,0,-1,-3,0,-1,-1,-5,1,1,-1],[1,359,313,-316,-318,-4,-2,2,-2,-4,-2,-2,-1,-6,1,0,-1],[2,365,319,-315,-319,-6,-2,3,-4,-3,-3,-6,-3,-6,1,0,-2],[3,369,325,-314,-320,-5,-3,1,-4,-3,-4,-5,-5,-10,-1,0,-2],[4,373,331,-315,-321,-4,-4,0,-5,-6,-5,-3,-4,-7,-3],[5,376,339,-316,-322,-1,-4,-6,-5,-7,-3],[6,377,348,-316,-324,-2,-5,-10,-6],[7,377,355,-316,-323,-6,-7,-9,-6],[8,375,363,-316,-324,-6,-8,-9,-8],[9,370,370,-312,-323,-8,-11],[10,365,375,-311,-322,-6,-10],[11,359,378,-309,-318,-6,-9],[12,351,379,-306,-313,-6,-8],[13,341,377,-305,-306,-6,-8],[14,332,373,-309,-303,-3,-2,-3,4],[15,318,364,-309,-299,-3,3,-5,5,-8,2],[16,309,358,-313,-304,-2,6,-4,4,-7,3,-2,0,-6,5],[17,300,350,-316,-308,-4,0,0,-1,-7,5,0,-3,0,-2,-2,-4,0,-2,-4,1,0,-2],[18,294,344,-317,-310,-1,-2,0,-4,-5,2,1,-3,0,-2,2,-4,2,-1,-2,-1,-2,2],[19,289,339,-316,-311,0,-5,1,-3,-3,1,1,-1,2,-4,2,-1,2,-2,-1,0,-1,0],[20,284,334,-315,-314,2,-4,2,-2,-1,-1,0,0,3,-4,2,0,2,-3,2,-1,-1,0],[21,280,327,-316,-315,5,-4,3,-2,-2,-1,4,-1,2,-1,3,-1,2,-1,2,1],[22,274,319,-314,-318,8,-2,0,-2,3,-1,4,-1,3,1,2,-1,4,1],[23,270,312,-313,-320,9,0,3,-1,2,0,5,2,2,-1,4,1],[24,266,305,-310,-321,8,-1,5,2,1,-1,7,3,1,0],[25,264,298,-310,-321,11,2,3,0,3,1,6,3],[26,262,292,-306,-321,10,4,3,-1,4,2,5,4],[27,262,286,-304,-318,10,4,2,1,6,4,3,1],[28,263,280,-301,-313,6,3,5,4,4,3,3,1,4,5],[29,266,276,-301,-311,6,4,5,4,4,4,2,3,3,2],[30,271,272,-303,-308,5,5,6,6,2,1,3,4,3,2,2,2,2,4],[31,278,269,-304,-306,5,6,5,6,2,3,3,3,3,3,3,2,1,4,1,2,1,-1,0,2,0,2,1,0,0,0,0,0,1,2],[32,285,267,-304,-302,4,6,3,5,1,2,4,6,0,0,2,3,2,3,0,1,0,1,1,0,0,2,1,0,0,1,0,-1,0,2],[33,292,268,-305,-302,3,7,3,5,0,1,2,5,0,1,1,2,1,2,0,2,1,0,0,1,0,2,0,-1,0,1,1,1,0,0],[34,300,270,-307,-301,1,6,1,2,0,3,2,3,0,3,0,1,1,2,0,2,0,0,0,0,1,2,0,0,0,1,0,0],[35,309,274,-311,-303,1,5,-1,1,0,4,0,2,1,3,0,2,0,0,0,3,0,0,0,0,1,1,-1,0,0,2],[36,317,279,-313,-306,-1,4,0,2,-1,2,-1,2,0,2,0,4,0,-2,-1,4,1,0,-1,0,0,1],[37,327,286,-314,-310,-3,5,0,-1,-2,2,-1,3,0,1,-1,1,-1,1,-1,2,1,-1],[38,337,294,-315,-314,-4,3,-2,0,-2,1,-1,1,-2,0,0,2,-3,2,0,0],[39,345,300,-316,-315,-4,1,-1,-1,-2,1,-2,-1,-2,2,-2,0,-2,1]],[[0,342,311,-312,-318,-2,0,0,-1,-3,0,1,-1,-3,-1,-2,1,3,-2,-4,1],[1,346,315,-311,-317,-2,-2,0,-2,-3,0,0,-1,0,-2,-5,0,3,-1],[2,351,320,-310,-318,-3,-1,1,-3,-4,-1,0,-2,-1,-2,-3,-1,-2,-2],[3,354,324,-309,-318,-2,-2,0,-2,-4,-3,-3,-2,0,-2,-6,-3,-2,-1,-1,-2],[4,358,329,-308,-317,-4,-3,0,-3,-4,-4,-4,-1,-3,-3,-9,-2],[5,362,337,-310,-320,-5,-4,-1,-2,-5,-3,-8,-3],[6,365,344,-311,-320,-8,-6,-4,-5,-6,-2,-6,-4],[7,366,350,-311,-319,-10,-9,-7,-5,-6,-3],[8,366,359,-313,-323,-10,-10,-8,-6,-7,-4],[9,363,365,-312,-322,-11,-12,-7,-7,-8,-7],[10,359,370,-311,-321,-10,-13,-8,-10],[11,354,373,-310,-319,-9,-12,-8,-12],[12,348,373,-309,-314,-7,-11,-8,-13],[13,338,371,-305,-309,-7,-9,-6,-9],[14,331,368,-308,-308,-5,-3,-3,-4,-4,-6],[15,319,360,-310,-304,-1,2,-4,3,-4,-5,-5,0],[16,311,355,-312,-308,-2,6,-3,1,-4,4,-5,3,-2,-3,0,-8],[17,301,347,-313,-312,-3,5,-3,-2,-2,3,-3,1,1,-7,-1,-2,0,-1,1,-4,0,-1,-3,0,2,-2],[18,296,342,-314,-314,-2,1,-2,-1,-2,-2,-4,2,7,-8,-2,0,2,-1,4,-5,-1,0,-5,4,3,-3],[19,292,337,-314,-314,-1,-1,-1,-2,0,0,-4,0,7,-6,0,0,1,0,4,-4,0,0,-3,1,0,0],[20,288,333,-313,-316,-1,-1,1,-2,1,-1,-4,1,8,-4,1,-2,-1,0,4,-2,1,-1,0,0,0,1],[21,284,327,-313,-316,2,-3,0,0,0,-2,2,-1,4,-1,3,-1,0,0,3,-1,2,0,0,-1],[22,280,321,-312,-319,2,-1,1,-2,2,0,3,-1,3,-1,3,0,2,0,1,0],[23,276,315,-309,-319,1,-2,3,0,1,-2,4,1,3,0,4,2,2,0],[24,274,309,-310,-320,5,-1,0,-1,3,0,5,1,1,2,8,2],[25,273,304,-310,-321,6,1,0,-3,3,2,7,3,-1,-1,9,6],[26,272,299,-308,-320,6,0,0,-1,5,2,4,1,1,2],[27,273,295,-307,-320,5,2,1,-1,6,4,1,1,2,1],[28,275,291,-307,-317,5,2,0,-1,6,4,2,2,1,1,3,2],[29,278,288,-307,-316,4,2,1,1,5,5,1,1,2,0,3,3,1,2],[30,282,284,-308,-312,3,2,0,1,6,4,1,3,2,0,1,2,2,1,1,1],[31,286,282,-306,-311,1,3,2,1,3,4,2,3,2,2,2,1,2,2,0,0,3,5,0,0,1,1],[32,291,280,-306,-308,1,2,2,4,1,2,2,2,1,2,3,3,0,2,1,-1,1,4,0,1,0,-2,1,3,0,0],[33,296,281,-306,-309,0,5,3,2,0,2,1,2,1,3,1,0,0,2,0,1,2,3,0,0,-1,0,1,1,1,1,-1,-2],[34,302,283,-308,-309,0,4,2,2,-1,2,2,2,0,1,0,1,0,3,1,0,0,3,1,-1,-1,1,0,0,1,2,-1,-2],[35,309,286,-310,-310,1,4,-1,1,0,2,0,2,0,0,0,1,0,2,0,2,0,1,0,1,1,-1,-1,1,0,0,0,1],[36,316,290,-311,-311,-1,1,-1,3,0,1,-1,1,0,2,0,1,0,-1,-1,0,0,5,0,0,0,-1,-1,1,1,-1],[37,323,295,-312,-313,-1,1,-1,1,-1,2,-1,0,0,2,-1,0,0,0,0,0,-2,3,0,0,0,2],[38,331,301,-313,-315,0,0,-2,1,-3,2,1,-2,-1,2,-2,0,1,-1,-1,1,-2,2],[39,337,306,-313,-316,0,0,-2,-1,-3,1,0,-1,-1,1,-1,-1,0,0,-1,-1]],[[0,333,313,-307,-317,0,-1,0,-1,-4,0,3,-2,-6,2,3,-2,-2,0,1,0],[1,336,316,-306,-317,0,-1,-1,-1,-1,-1,1,-2,-6,1,2,-2,-1,-1,0,0],[2,339,319,-304,-316,-1,-1,-1,-2,1,-1,-2,-3,-5,1,3,-3,-2,0,-6,-1],[3,343,323,-305,-317,-1,0,1,-2,-1,-3,-2,-2,-4,-1,0,-2,-5,-1,-3,-1],[4,347,328,-306,-316,1,-2,-1,-2,-1,-3,-3,-2,-8,-3,-2,0,-1,-2],[5,351,334,-309,-319,2,0,-1,-3,-5,-4,-8,-1,-5,-3,-5,0],[6,353,340,-309,-319,1,-1,-4,-5,-8,-5,-7,-2,-4,-2],[7,354,345,-309,-319,0,-2,-7,-5,-9,-5,-6,-4,-6,-3],[8,355,351,-310,-318,-2,-4,-9,-8,-9,-6,-6,-4],[9,353,357,-309,-319,-3,-4,-10,-11,-9,-7,-5,-3],[10,350,362,-308,-318,-4,-6,-10,-13,-8,-6,-5,-5],[11,347,364,-309,-316,-3,-5,-10,-13,-7,-9,-4,-6],[12,342,365,-308,-314,-3,-5,-7,-11,-8,-11,-4,-6],[13,335,364,-308,-314,-1,1,-5,-9,-8,-12,-2,-7],[14,329,361,-310,-312,-1,2,-2,-3,-5,-8,-3,-9],[15,319,356,-311,-313,0,6,-2,1,-2,1,-4,-5,-2,-7],[16,311,351,-311,-314,0,5,-3,4,-2,2,-4,3,-1,-5,-4,3,-1,-1],[17,303,345,-312,-316,-1,2,-3,2,-1,0,-4,3,0,-2,-2,1,-3,-1,3,-5,0,-1,1,-3,-1,-1,0,-1],[18,298,339,-312,-315,-1,-1,-3,2,0,-3,-5,3,4,-6,-2,2,0,-2,4,-4,-1,-1,-1,3,2,-4,0,1],[19,295,336,-312,-317,-1,-2,-2,3,0,-4,-4,3,6,-4,-3,-1,1,1,4,-4,0,0,-1,0,2,-2,1,0],[20,291,331,-311,-316,1,-2,-3,1,2,-2,-5,2,7,-4,-2,0,1,0,3,-3,0,0,1,-1,3,-1,0,0],[21,288,327,-310,-317,1,-2,-3,1,1,-2,-1,-1,6,-2,-3,0,3,0,2,-2,1,0,3,0],[22,284,321,-309,-317,2,-2,-3,-1,1,-1,1,0,8,0,-5,-2,2,0,4,1,3,-1],[23,281,316,-307,-317,0,-1,0,-3,1,0,1,0,6,0,-1,0,0,0],[24,280,311,-309,-318,1,-2,2,0,1,-1,2,0,5,2,-2,-1],[25,279,307,-309,-319,2,-1,2,0,1,-1,1,0,6,2,-1,0],[26,279,303,-309,-318,3,-3,1,0,3,1,1,-1,3,3,0,-1],[27,280,300,-309,-319,3,-1,2,1,2,0,1,0,3,3,1,-1],[28,282,297,-309,-318,2,0,2,0,2,2,2,0,1,3,2,-1,3,5],[29,285,294,-310,-316,2,-1,2,2,2,1,1,1,3,3,1,-1,0,2],[30,288,292,-310,-315,1,-1,2,3,1,1,2,2,1,1,2,0,1,2],[31,292,291,-310,-315,0,-1,4,3,1,4,0,-1,1,2,3,2,0,1,2,1],[32,296,291,-310,-316,1,0,1,5,3,2,-1,1,2,1,0,2,3,2,0,1,1,1],[33,300,291,-310,-315,1,1,1,3,2,4,0,-1,1,3,1,1,0,2,0,0,0,1,1,0,1,2],[34,305,293,-311,-316,0,2,2,2,0,3,0,0,1,3,-1,0,2,1,-1,2,1,0,0,0,1,2,-1,0],[35,310,296,-310,-317,-1,2,1,1,-1,3,0,0,1,2,-1,1,0,0,0,2,1,-1,-1,3,0,-1,1,1,-1,0],[36,315,299,-310,-317,-1,0,0,1,-1,4,0,-1,-1,2,0,0,0,1,0,1,0,0,-1,2,1,-2,-1,3,0,-1],[37,320,302,-310,-317,0,0,-1,0,-2,3,1,0,-2,0,0,2,0,0,-1,0,0,0,0,3,-1,-2],[38,326,307,-310,-319,1,1,-1,0,-3,1,1,-1,-2,2,0,-1,-1,1,0,0,-1,1,0,-1],[39,330,310,-308,-318,-1,0,-1,-1,-2,1,1,-1,-4,1,2,-1,-3,0,2,0,-4,1]],[[0,329,314,-307,-317,1,-1,-4,1,3,-2,-1,0,-2,-1,4,-1,-5,1],[1,332,317,-307,-318,1,1,-2,-2,1,0,0,-2,-3,0,3,-2,-3,1],[2,334,319,-305,-316,0,-1,-2,-1,2,-1,-1,-2,-2,0,2,-1,-3,-1],[3,338,323,-307,-317,0,-1,1,-1,2,-1,-4,-1,1,-2,-2,-1,-2,-1],[4,342,327,-307,-316,-2,-2,2,-1,1,-1,-2,-2,-2,-2,-5,-2,0,0],[5,345,332,-309,-317,1,-2,-2,-2,1,-1,-3,-2,-6,-2,-6,-2,-3,-1],[6,347,337,-310,-318,2,0,-3,-4,-3,-3,-5,-2,-6,-3,-4,-2,-6,-2],[7,349,342,-312,-319,1,0,-2,-5,-6,-2,-5,-5,-8,-3,-2,-1],[8,349,348,-312,-319,1,-3,-5,-4,-6,-5,-6,-5,-6,-4],[9,348,354,-312,-321,0,-2,-4,-7,-8,-5,-7,-7,-4,-2],[10,346,358,-313,-320,2,-3,-6,-7,-8,-8,-7,-7,-1,-1],[11,343,360,-311,-320,-1,0,-5,-8,-7,-10,-6,-7,-2,-2],[12,340,361,-312,-319,0,0,-4,-6,-7,-10,-5,-9,-2,-2],[13,334,361,-311,-318,0,0,-2,-1,-6,-12,-4,-8,-3,-4],[14,329,359,-312,-317,-1,1,-1,1,-3,-6,-3,-8,-3,-7],[15,319,355,-310,-318,-2,3,0,5,-3,-2,-1,-3,-2,-1,-1,-10],[16,311,350,-310,-318,0,4,-2,2,-2,1,-2,2,-3,3,-1,-4,-2,2,0,-4],[17,304,344,-311,-318,-1,0,-1,2,-2,1,-1,-1,-2,4,-1,-2,-3,1,0,-1,0,-2,-2,1,0,-3,1,-1],[18,299,338,-311,-316,0,-2,-2,-1,0,0,-4,2,2,-3,-1,0,0,-1,-1,0,0,-1,0,0,1,-1,0,-1],[19,296,334,-311,-316,0,-3,0,1,-1,-1,-2,1,1,-2,0,-1,-1,1,2,-1,0,-1,-1,-1,2,0,0,0],[20,293,330,-311,-316,2,-2,-1,0,0,0,-2,-1,3,0,-2,-2,1,1,0,-1,2,-1,-1,0,3,-2],[21,290,327,-310,-317,3,-2,-3,-1,2,-1,-2,1,3,-2,-1,0,1,-1,1,0,1,-1],[22,287,322,-309,-318,1,-1,1,-1,0,0,0,-1,2,-1,1,1,1,-1,0,-1],[23,285,317,-310,-317,3,-1,1,-1,0,-1,1,0,3,0,-1,0,2,-1],[24,284,313,-310,-318,2,-1,2,-1,1,0,0,-1,3,1,0,-1,2,1],[25,284,310,-311,-319,1,-2,3,0,3,0,-2,-1,4,2,-1,-1],[26,284,306,-310,-318,0,-3,3,0,2,0,2,0,0,0,0,1],[27,285,304,-310,-320,0,-1,3,0,2,0,0,0,3,1,-1,0],[28,287,301,-310,-318,-1,-2,3,1,2,1,-1,-2,3,3,-1,-1],[29,290,299,-312,-318,1,-1,1,1,3,1,-2,-1,3,2],[30,292,298,-311,-318,-1,-2,3,3,1,1,-1,-1,1,1],[31,296,296,-312,-317,0,-1,3,4,0,0,-1,-1,2,1],[32,299,296,-312,-317,1,-1,2,4,0,1,0,-1,1,2,1,-1],[33,302,296,-311,-316,0,-1,2,3,0,1,2,2,-1,1,2,0,-1,3],[34,305,297,-310,-316,0,0,1,2,-1,1,2,2,-1,0,1,1,0,2,0,-1],[35,311,299,-311,-315,-1,-2,1,3,-1,0,1,2,-1,1,1,0,0,1,-1,-1,0,1,1,2],[36,315,302,-312,-317,2,0,-2,1,0,1,0,1,0,-1,-1,3,0,0,0,-2,0,3,-1,0,1,-1],[37,319,305,-311,-317,1,-1,-1,2,-1,0,0,-1,0,2,0,-1,-2,2,1,-1,-1,2,0,-1],[38,323,309,-309,-318,1,-1,-2,2,-1,0,1,-1,-1,-1,0,2,-1,-1,1,-1,-4,4],[39,326,311,-308,-316,2,-2,-5,1,2,-1,0,-1,-1,1,0,-2,-3,2,3,-2]],[[0,326,315,-307,-317,1,-1,0,0,-1,-1,3,-1,-2,0,-1,0],[1,328,317,-306,-317,1,0,0,-1,-1,-1,4,0,-4,-2,1,0],[2,331,319,-307,-316,2,-1,0,0,-1,-2,3,-1,-3,0],[3,334,322,-307,-316,1,0,3,-2,-4,-1,4,0,-3,-2,0,-1],[4,336,325,-305,-314,0,-2,2,-1,-4,-1,4,-1,-3,-2,-1,-1],[5,339,330,-306,-316,0,-1,-1,-2,-2,-2,3,0,-3,-1,-8,-3,-4,-2,-6,0],[6,342,335,-309,-317,1,-1,-3,-3,0,-1,-1,-2,-6,-2,-5,-3,-7,-2,-2,-1],[7,344,340,-311,-319,1,0,-3,-3,-3,-3,-1,-2,-7,-3,-5,-3,-5,-3],[8,344,345,-310,-318,-2,-3,-2,-4,-3,-2,-4,-4,-6,-4,-5,-3,-3,-2],[9,344,351,-312,-322,-1,-2,-3,-3,-2,-3,-6,-6,-6,-5,-4,-3],[10,342,354,-312,-319,-1,-4,-3,-5,-2,-2,-7,-8,-6,-5,-2,-3],[11,340,356,-312,-319,-2,-4,-2,-2,-2,-5,-7,-9,-5,-4,-2,-4],[12,337,357,-312,-319,-1,-2,-1,-3,-3,-3,-7,-11,-3,-4,-4,-5],[13,333,357,-313,-319,0,-1,-1,-1,-2,-1,-5,-11,-2,-5,-4,-7],[14,328,356,-312,-319,-2,-1,0,2,-1,0,-3,-6,-2,-7,-3,-9],[15,319,352,-311,-319,-1,1,0,3,-2,2,-1,-1,-1,-1,-1,-7,-1,-6],[16,312,347,-311,-318,0,1,-1,3,-2,1,-1,2,-1,1,-3,1,0,-3,-2,2,0,-4],[17,305,341,-311,-318,0,0,-1,3,-1,1,-3,0,1,-1,-2,1,0,0,-3,0,0,1,0,-3,-4,3],[18,300,337,-310,-319,0,-1,-1,1,-3,1,1,-1,-3,0,1,-1,1,-2,-2,1,1,-2,1,-1,2,-2],[19,297,333,-309,-318,0,-1,-1,0,-2,1,0,0,-1,-1,0,-1,2,-1,-1,0,0,-1,3,-1,0,-2],[20,295,330,-310,-318,1,-1,-1,0,-1,0,1,-1,-2,1,2,-2,0,0,1,-1,-2,1,4,-2],[21,293,327,-310,-319,2,0,-2,0,-1,-1,2,-1,-1,-1,3,0,-2,0,2,-1,-2,0],[22,290,323,-309,-319,2,-1,-2,1,0,-2,3,0,0,-1,0,0,0,0,2,-1],[23,288,318,-309,-317,3,-1,-2,-1,0,0,2,-1,2,0,-1,-1,2,1],[24,287,314,-310,-317,4,-1,-2,-2,1,1,0,-2,3,1,-1,0],[25,287,311,-311,-318,3,-1,0,-1,-1,0,3,-2,1,2,0,-2],[26,288,308,-313,-319,3,-1,1,0,0,-3,0,0,5,3],[27,289,306,-313,-319,3,-1,0,-2,0,0,1,-1],[28,291,304,-313,-319,1,-1,1,-1,0,-1,0,0],[29,293,303,-313,-321,1,1,0,-1,0,-1],[30,295,301,-313,-319,1,-1,0,1,-1,-1],[31,298,300,-313,-319,1,-1,0,1,0,-1],[32,301,300,-313,-320,1,1,0,1,0,-1,2,1],[33,303,300,-311,-319,0,1,1,1,0,0,0,1],[34,306,301,-311,-319,0,1,1,1,-1,0,1,2,1,1],[35,311,304,-311,-320,0,1,0,0,0,1,-1,2,1,-1,0,1,-1,1],[36,314,305,-310,-318,0,0,0,-1,-1,2,-1,1,1,0,0,-1,-1,2,0,0,0,-1],[37,317,308,-309,-319,1,-1,-1,2,-1,0,0,0,-1,0,1,-1,-1,1,0,0],[38,321,310,-309,-317,2,-1,-1,0,-2,1,2,-2,-1,1,0,-1,-1,1],[39,323,313,-307,-318,1,-1,-1,0,-1,1,2,-3,-1,1,-1,0]],[[0,322,315,-303,-316,0,-2,1,0,-2,0],[1,324,317,-302,-316,-1,-1,2,-1,0,0],[2,325,319,-299,-316,-3,0,3,-2,-1,0],[3,328,321,-300,-314,-1,-1,2,-1,-2,-2],[4,330,324,-298,-313,-3,-2,1,0,-2,-3],[5,333,328,-299,-313,-5,-3,3,-1,-5,-1,3,-1],[6,337,333,-305,-315,-2,-3,2,1,-5,-4,0,-1,-3,-1],[7,340,338,-310,-317,0,-3,1,0,-5,-3,-1,-2,-5,-2,-2,-3,-6,-2,-5,-2],[8,341,343,-312,-319,0,-1,0,-3,-4,-3,-3,-3,-3,-2,-5,-4,-4,-2,-3,-2],[9,341,348,-314,-321,2,-1,-3,-4,-2,-3,-3,-2,-5,-5,-4,-3,-5,-3,-1,-2],[10,339,352,-313,-321,0,-2,-1,-3,-3,-4,-4,-3,-4,-6,-5,-4,-3,-3],[11,338,354,-314,-322,0,0,-1,-3,-4,-5,-1,-3,-7,-7,-2,-4,-4,-4],[12,336,355,-314,-322,0,1,-1,-4,-3,-3,-3,-4,-4,-7,-3,-4,-4,-5],[13,333,356,-316,-323,2,1,-2,-2,-1,0,-3,-6,-2,-5,-4,-7,-3,-6],[14,328,354,-313,-321,-1,1,-1,-1,-1,1,-2,-2,-1,-5,-4,-10,-1,-2,-1,-8],[15,319,350,-311,-319,-1,1,0,0,-2,2,0,1,-1,0,-2,-4,0,-5,-2,-8],[16,312,346,-310,-319,-1,1,-1,-1,-1,5,-1,1,-1,-1,-2,1,0,1,-2,0,0,-4,0,-2],[17,305,340,-309,-319,-2,3,1,-2,-2,1,-2,2,1,-2,-2,3,-1,1,0,-2,-1,-1,-1,-1],[18,301,336,-310,-320,-1,2,0,-1,-1,-1,-1,0,0,0,-1,-1,-1,0,0,1,0,-3],[19,298,333,-309,-320,-1,2,1,-3,-1,2,-2,-1,1,0,0,-1,-1,0,1,0],[20,296,329,-309,-318,-1,0,1,-1,0,0,-2,0,2,-1,-1,0,0,1,0,-3],[21,294,327,-309,-319,1,0,-1,-1,0,0,0,-1,1,-1,0,0,-2,0],[22,292,323,-309,-318,1,-1,-1,-1,1,0,0,0,2,-1,-1,0],[23,290,318,-308,-316,-1,-2,1,0,1,0,0,-1,3,0,-1,0],[24,289,315,-309,-317,0,-1,1,-1,1,1,0,-2,3,1],[25,290,312,-313,-317,2,-2,1,-1,1,0,0,-1],[26,291,310,-315,-320,3,-1,-1,-2],[27,292,308,-315,-320,1,-2,0,-1],[28,294,306,-316,-321,1,0,-1,-2],[29,296,305,-316,-322,0,0],[30,297,304,-314,-322,-2,-1],[31,300,303,-314,-321,-2,-2],[32,303,304,-315,-323,0,-1,1,-1],[33,305,304,-314,-323,1,1,0,0],[34,307,305,-313,-323,1,1,0,0,1,2],[35,311,307,-311,-322,0,2,1,-3,-1,3,0,0],[36,313,308,-308,-320,-2,-1,1,0,-1,1,0,1,0,-1],[37,315,310,-306,-320,0,0,-1,-1,-1,2,0,-2,0,2],[38,318,312,-305,-319,0,0,0,-1,-1,1,1,-2],[39,320,314,-304,-319,0,0,0,-1,-1,1,2,-2]],[[0,321,316,-302,-318,0,0],[1,321,317,-297,-316,-2,-1],[2,324,319,-298,-315,-3,-1],[3,326,321,-297,-314,-3,0],[4,328,323,-296,-311,-4,-3],[5,332,327,-300,-312,-3,-2],[6,335,333,-303,-315,-4,-3],[7,338,338,-308,-317,-3,-4,0,0],[8,339,343,-310,-319,-3,-3,0,-2],[9,339,347,-312,-320,-2,-4,-1,-1,-2,-4,-2,-2],[10,338,350,-314,-320,0,-3,-2,-2,-2,-4,-2,-2,-4,-4,-3,-4,-4,-4,-2,-3],[11,337,353,-315,-323,0,-1,-1,-2,-3,-4,-1,-2,-4,-5,-3,-5,-4,-2],[12,335,354,-314,-323,-1,0,0,-2,-4,-5,-1,-1,-3,-5,-3,-5,-3,-4],[13,332,354,-314,-321,-1,-2,-1,0,-2,-4,0,0,-4,-6,-2,-7,-2,-1],[14,328,353,-312,-320,-3,-1,0,0,-2,-3,-1,0,-2,-4,-1,-4,-2,-5],[15,320,350,-313,-321,1,3,-2,-1,0,1,-1,-2,-2,0,0,1,-1,-4],[16,312,345,-310,-319,-1,4,0,-5,-1,5,-2,-3,0,3,-2,1,-1,0],[17,306,340,-310,-319,-1,3,-1,-4,0,3,0,-2,-2,3,0,0],[18,302,336,-311,-320,-1,2,1,-3,-1,0,-1,1],[19,299,332,-310,-318,-1,1,1,-2,1,-1,-3,1],[20,297,329,-310,-318,-1,0,1,0,2,-3,-2,2],[21,295,327,-309,-319,-2,0,2,0,1,-2],[22,293,323,-309,-317,-1,-1,1,-1,2,-1],[23,291,319,-309,-317,-1,-1,1,0,4,-1],[24,291,316,-312,-318,1,0],[25,291,313,-314,-319],[26,292,310,-316,-319],[27,294,309,-319,-322],[28,295,308,-319,-324],[29,298,306],[30,299,306],[31,302,305],[32,304,305,-317,-325],[33,305,305,-314,-323],[34,307,306,-314,-325],[35,311,308,-310,-323,-1,1],[36,313,309,-308,-321,-1,0],[37,315,311,-307,-321,1,0],[38,317,313,-304,-320,0,0],[39,319,314,-303,-318,0,-1]]],_initTable();class PCCS{static _calcPccsH(r){let e=-1,t=-1;for(let n=1;n<PCCS._MUNSELL_H.length;++n)if(PCCS._MUNSELL_H[n]<=r&&(e=n),r<PCCS._MUNSELL_H[n]){t=n;break}return-1==e&&console.error("h1 is -1, H = "+r),-1==t&&console.error("h2 is -1, H = "+r),e+(t-e)*(r-PCCS._MUNSELL_H[e])/(PCCS._MUNSELL_H[t]-PCCS._MUNSELL_H[e])}static _calcPccsS(r,e,t){const n=PCCS._calcInterpolatedCoefficients(t),l=.81-.24*Math.sin((t-2.6)/12*Math.PI),s=-e/(1-Math.exp(-l*r));return PCCS._solveEquation(PCCS._simplyCalcPccsS(r,e,t),n[3],n[2],n[1],s)}static _calcInterpolatedCoefficients(r){PCCS._MAX_HUE<r&&(r-=PCCS._MAX_HUE);let e=0|Math.floor(r);e%2!=0&&--e;let t=e+2;PCCS._MAX_HUE<t&&(t-=PCCS._MAX_HUE);const n=PCCS._COEFFICIENTS[e/2],l=PCCS._COEFFICIENTS[t/2],s=[0,0,0,0];for(let a=0;a<3;++a)s[a+1]=(r-e)/(t-e)*(l[a]-n[a])+n[a];return s}static _solveEquation(r,e,t,n,l){let s=r;for(;;){const r=-(e*s*s*s+t*s*s+n*s+l)/(3*e*s*s+2*t*s+n)+s;if(Math.abs(r-s)<.001)break;s=r}return s}static _calcMunsellH(r){const e=0|Math.floor(r),t=e+1;let n=PCCS._MUNSELL_H[e],l=PCCS._MUNSELL_H[t];return n>l&&(l=100),n+(l-n)*(r-e)/(t-e)}static _calcMunsellC(r,e,t){const n=PCCS._calcInterpolatedCoefficients(r),l=.81-.24*Math.sin((r-2.6)/12*Math.PI);return(n[3]*t*t*t+n[2]*t*t+n[1]*t)*(1-Math.exp(-l*e))}static _simplyCalcPccsH(r){const e=r*Math.PI/50;return 24*e/(2*Math.PI)+1.24+.02*Math.cos(e)-.1*Math.cos(2*e)-.11*Math.cos(3*e)+.68*Math.sin(e)-.3*Math.sin(2*e)+.013*Math.sin(3*e)}static _simplyCalcPccsS(r,e,t){const n=12+1.7*Math.sin((t+2.2)*Math.PI/12),l=.81-.24*Math.sin((t-2.6)*Math.PI/12),s=.077,a=-e/(n*(1-Math.exp(-l*r)));return(-s+Math.sqrt(s*s-.016*a))/.008}static _simplyCalcMunsellH(r){const e=(r-1)*Math.PI/12;return 100*e/(2*Math.PI)-1+.12*Math.cos(e)+.34*Math.cos(2*e)+.4*Math.cos(3*e)-2.7*Math.sin(e)+1.5*Math.sin(2*e)-.4*Math.sin(3*e)}static _simplyCalcMunsellC(r,e,t){const n=12+1.7*Math.sin((r+2.2)*Math.PI/12),l=.81-.24*Math.sin((r-2.6)*Math.PI/12);return n*(.077*t+.004*t*t)*(1-Math.exp(-l*e))}static fromMunsell([r,e,t]){Munsell.MAX_HUE<=r&&(r-=Munsell.MAX_HUE);let n=0,l=e,s=0;return n=PCCS.conversionMethod._calcPccsH(r),Munsell.MONO_LIMIT_C<=t&&(s=PCCS.conversionMethod._calcPccsS(e,t,n)),PCCS._MAX_HUE<=n&&(n-=PCCS._MAX_HUE),[n,l,s]}static toMunsell([r,e,t]){let n=0,l=e,s=0;return n=PCCS.conversionMethod._calcMunsellH(r),PCCS._MONO_LIMIT_S<=t&&(s=PCCS.conversionMethod._calcMunsellC(r,e,t)),n<0&&(n+=Munsell.MAX_HUE),Munsell.MAX_HUE<=n&&(n-=Munsell.MAX_HUE),[n,l,s]}static tone(r){const e=r[2],t=PCCS.relativeLightness(r),n=-3*e/10+8.5,l=3*e/10+2.5;return e<1?PCCS.Tone.none:1<=e&&e<4?t<l?PCCS.Tone.dkg:t<5.5?PCCS.Tone.g:t<n?PCCS.Tone.ltg:e<2.5?PCCS.Tone.p:PCCS.Tone.p_p:4<=e&&e<7?t<l?PCCS.Tone.dk:t<5.5?PCCS.Tone.d:t<n?PCCS.Tone.sf:e<5.5?PCCS.Tone.lt:PCCS.Tone.lt_p:7<=e&&e<8.5?t<l?PCCS.Tone.dp:t<n?PCCS.Tone.s:PCCS.Tone.b:PCCS.Tone.v}static relativeLightness([r,e,t]){return e-(.25-.34*Math.sqrt(1-Math.sin((r-2)*Math.PI/12)))*t}static absoluteLightness([r,e,t]){return e+(.25-.34*Math.sqrt(1-Math.sin((r-2)*Math.PI/12)))*t}static toToneCoordinate(r){return[r[0],relativeLightness(r),r[2]]}static toNormalCoordinate(r){return[r[0],absoluteLightness(r),r[2]]}static toString(r){const e=Math.round(10*r[1])/10;if(r[2]<PCCS._MONO_LIMIT_S)return 9.5<=r[1]?`W N-${e}`:r[1]<=1.5?`Bk N-${e}`:`Gy-${e} N-${e}`;{const t=Math.round(10*r[0])/10,n=Math.round(10*r[2])/10;let l=Math.round(r[0]);l<=0&&(l=PCCS._MAX_HUE),PCCS._MAX_HUE<l&&(l-=PCCS._MAX_HUE);const s=PCCS._HUE_NAMES[l],a=PCCS._TONE_NAMES[PCCS.tone(r)];return"none"==a?`${t}:${s}-${e}-${n}s`:`${a}${t} ${t}:${s}-${e}-${n}s`}}static toHueString([r,e,t]){if(t<PCCS._MONO_LIMIT_S)return"N";{let e=Math.round(r);return e<=0&&(e=PCCS._MAX_HUE),PCCS._MAX_HUE<e&&(e-=PCCS._MAX_HUE),PCCS._HUE_NAMES[e]}}static toToneString(r){return r[2]<PCCS._MONO_LIMIT_S?9.5<=r[1]?"W":r[1]<=1.5?"Bk":"Gy":PCCS._TONE_NAMES[PCCS.tone(r)]}}function convert(r,e,t="rgb"){switch(e.toLowerCase()+"-"+t.toLowerCase()){case"yiq-rgb":return RGB.fromLRGB(LRGB.fromYIQ(r));case"lrgb-rgb":return RGB.fromLRGB(r);case"xyz-rgb":return RGB.fromLRGB(LRGB.fromXYZ(r));case"yxy-rgb":return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(r)));case"lab-rgb":return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(r)));case"lms-rgb":return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(r)));case"munsell-rgb":return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(r)));case"pccs-rgb":return RGB.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(r))));case"rgb-lrgb":return LRGB.fromRGB(r);case"yiq-lrgb":return LRGB.fromYIQ(r);case"xyz-lrgb":return LRGB.fromXYZ(r);case"yxy-lrgb":return LRGB.fromXYZ(XYZ.fromYxy(r));case"lab-lrgb":return LRGB.fromXYZ(XYZ.fromLab(r));case"lms-lrgb":return LRGB.fromXYZ(XYZ.fromLMS(r));case"munsell-lrgb":return LRGB.fromXYZ(XYZ.fromMunsell(r));case"pccs-lrgb":return LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(r)));case"rgb-yiq":return YIQ.fromLRGB(LRGB.fromRGB(r));case"lrgb-yiq":return YIQ.fromLRGB(r);case"xyz-yiq":return YIQ.fromLRGB(LRGB.fromXYZ(r));case"yxy-yiq":return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromYxy(r)));case"lab-yiq":return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLab(r)));case"lms-yiq":return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromLMS(r)));case"munsell-yiq":return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(r)));case"pccs-yiq":return YIQ.fromLRGB(LRGB.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(r))));case"rgb-xyz":return XYZ.fromLRGB(LRGB.fromRGB(r));case"yiq-xyz":return XYZ.fromLRGB(LRGB.fromYIQ(r));case"lrgb-xyz":return XYZ.fromLRGB(r);case"yxy-xyz":return XYZ.fromYxy(r);case"lab-xyz":return XYZ.fromLab(r);case"lms-xyz":return XYZ.fromLMS(r);case"munsell-xyz":return XYZ.fromMunsell(r);case"pccs-xyz":return XYZ.fromMunsell(Munsell.fromPCCS(r));case"rgb-yxy":return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)));case"yiq-yxy":return Yxy.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(r)));case"lrgb-yxy":return Yxy.fromXYZ(XYZ.fromLRGB(r));case"xyz-yxy":return Yxy.fromXYZ(r);case"lab-yxy":return Yxy.fromXYZ(XYZ.fromLab(r));case"lms-yxy":return Yxy.fromXYZ(XYZ.fromLMS(r));case"munsell-yxy":return Yxy.fromXYZ(XYZ.fromMunsell(r));case"pccs-yxy":return Yxy.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(r)));case"rgb-lab":return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)));case"yiq-lab":return Lab.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(r)));case"lrgb-lab":return Lab.fromXYZ(XYZ.fromLRGB(r));case"xyz-lab":return Lab.fromXYZ(r);case"yxy-lab":return Lab.fromXYZ(XYZ.fromYxy(r));case"lms-lab":return Lab.fromXYZ(XYZ.fromLMS(r));case"munsell-lab":return Lab.fromXYZ(XYZ.fromMunsell(r));case"pccs-lab":return Lab.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(r)));case"rgb-lms":return LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)));case"yiq-lms":return LMS.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(r)));case"lrgb-lms":return LMS.fromXYZ(XYZ.fromLRGB(r));case"xyz-lms":return LMS.fromXYZ(r);case"yxy-lms":return LMS.fromXYZ(XYZ.fromYxy(r));case"lab-lms":return LMS.fromXYZ(XYZ.fromLab(r));case"munsell-lms":return LMS.fromXYZ(XYZ.fromMunsell(r));case"pccs-lms":return LMS.fromXYZ(XYZ.fromMunsell(Munsell.fromPCCS(r)));case"rgb-munsell":return Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r)));case"yiq-munsell":return Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(r)));case"lrgb-munsell":return Munsell.fromXYZ(XYZ.fromLRGB(r));case"xyz-munsell":return Munsell.fromXYZ(r);case"yxy-munsell":return Munsell.fromXYZ(XYZ.fromYxy(r));case"lab-munsell":return Munsell.fromXYZ(XYZ.fromLab(r));case"lms-munsell":return Munsell.fromXYZ(XYZ.fromLMS(r));case"pccs-munsell":return Munsell.fromPCCS(r);case"rgb-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromRGB(r))));case"yiq-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(LRGB.fromYIQ(r))));case"lrgb-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLRGB(r)));case"xyz-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(r));case"yxy-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromYxy(r)));case"lab-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLab(r)));case"lms-pccs":return PCCS.fromMunsell(Munsell.fromXYZ(XYZ.fromLMS(r)));case"munsell-pccs":return PCCS.fromMunsell(r)}return r}function isRGBSaturated(){return RGB.isSaturated}function isYxySaturated(){return Yxy.isSaturated}function isMunsellSaturated(){return Munsell.isSaturated}PCCS._MIN_HUE=0,PCCS._MAX_HUE=24,PCCS._MONO_LIMIT_S=.01,PCCS._HUE_NAMES=["","pR","R","yR","rO","O","yO","rY","Y","gY","YG","yG","G","bG","GB","GB","gB","B","B","pB","V","bP","P","rP","RP"],PCCS._TONE_NAMES=["p","p+","ltg","g","dkg","lt","lt+","sf","d","dk","b","s","dp","v","none"],PCCS._MUNSELL_H=[96,0,4,7,10,14,18,22,25,28,33,38,43,49,55,60,65,70,73,76,79,83,87,91,96,100],PCCS._COEFFICIENTS=[[.853642,.084379,-.002798],[1.042805,.046437,.001607],[1.07916,.02547,.003052],[1.039472,.054749,-511e-6],[.925185,.050245,953e-6],[.968557,.012537,.003375],[1.070433,-.047359,.007385],[1.08703,-.051075,.006526],[1.089652,-.050206,.006056],[.880861,.0603,-.00128],[.897326,.053912,-86e-5],[.887834,.055086,-847e-6],[.853642,.084379,-.002798]],PCCS.ConversionMethod=Object.freeze({CONCISE:{_calcMunsellH:PCCS._simplyCalcMunsellH,_calcMunsellS:PCCS._simplyCalcMunsellC,_calcPccsH:PCCS._simplyCalcPccsH,_calcPccsS:PCCS._simplyCalcPccsS},ACCURATE:{_calcMunsellH:PCCS._calcMunsellH,_calcMunsellC:PCCS._calcMunsellC,_calcPccsH:PCCS._calcPccsH,_calcPccsS:PCCS._calcPccsS}}),PCCS.conversionMethod=PCCS.ConversionMethod.ACCURATE,PCCS.Tone=Object.freeze({p:0,p_p:1,ltg:2,g:3,dkg:4,lt:5,lt_p:6,sf:7,d:8,dk:9,b:10,s:11,dp:12,v:13,none:14});
//# sourceMappingURL=color-space.min.js.map